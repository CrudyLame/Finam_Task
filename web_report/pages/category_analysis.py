"""
Category analysis page for the Finam analytics dashboard
"""

import streamlit as st
import pandas as pd
import plotly.express as px

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))
from utils import get_category_stats


def show_category_analysis(conversations):
	"""Display category analysis page with request categories and intents"""
	st.header("üè∑Ô∏è –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
	
	# Description section (empty for user to fill)
	st.subheader("üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞")
	st.info("–≠—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.")
	
	categories, intents = get_category_stats(conversations)
	
	col1, col2 = st.columns(2)
	
	with col1:
		st.subheader("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")
		if categories:
			fig = px.pie(
				values=list(categories.values()),
				names=list(categories.keys()),
				title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–ø—Ä–æ—Å–æ–≤"
			)
			st.plotly_chart(fig, use_container_width=True)
		else:
			st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
	
	with col2:
		st.subheader("–ù–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
		if intents:
			fig = px.bar(
				x=list(intents.keys()),
				y=list(intents.values()),
				title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
			)
			st.plotly_chart(fig, use_container_width=True)
		else:
			st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–º–µ—Ä–µ–Ω–∏—è—Ö")
	
	# Detailed breakdown
	st.subheader("üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞")
	
	if categories:
		category_df = pd.DataFrame(list(categories.items()), columns=['–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'])
		category_df['–ü—Ä–æ—Ü–µ–Ω—Ç'] = (category_df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] / category_df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum() * 100).round(2)
		st.dataframe(category_df, use_container_width=True)