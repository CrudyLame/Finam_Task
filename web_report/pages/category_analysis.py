"""
Category analysis page for the Finam analytics dashboard
"""

import streamlit as st
import pandas as pd
import plotly.express as px

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))
from utils import get_category_stats


def show_category_analysis(conversations):
	"""Display category analysis page with request categories and intents"""
	st.header("üè∑Ô∏è –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
	
	# Description section (empty for user to fill)
	st.subheader("üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞")
	st.markdown("""
	–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ LLM –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º prompt engineering –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
	
	### –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
	- **information** - –ø–æ–∏—Å–∫ —Ñ–∞–∫—Ç–æ–≤, —Å–ø—Ä–∞–≤–∫–∞
	- **communication** - —Å–æ–æ–±—â–µ–Ω–∏—è, e-mail, —á–∞—Ç
	- **other** - –ø—Ä–æ—á–µ–µ
	- **project_tasks** - –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∑–∞–¥–∞—á–∞–º/–ø—Ä–æ–µ–∫—Ç–∞–º
	- **hr** - –∫–∞–¥—Ä–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
	- **organizational** - –æ—Ä–≥-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ø—Ä–æ—Ü–µ—Å—Å—ã
	- **tech_support** - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
	- **products_info** - —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö, —Ç–∞—Ä–∏—Ñ–∞—Ö, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
	- **department_info** - –∫—Ç–æ –≤ –∫–∞–∫–æ–º –æ—Ç–¥–µ–ª–µ, –æ—Ä–≥-–¥–∏–∞–≥—Ä–∞–º–º—ã
	- **meetings** - –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
	- **task_management** - –ª–∏—á–Ω—ã–µ to-do, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Å—Ç–∞—Ç—É—Å—ã
	- **faq** - –ø–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞/—Å–µ—Ä–≤–∏—Å–∞
	- **feedback** - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∂–∞–ª–æ–±—ã, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
	- **statistics** - –∑–∞–ø—Ä–æ—Å—ã –º–µ—Ç—Ä–∏–∫, usage-report'—ã
	- **design_request** - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
	- **sources_request** - –ø—Ä–æ—Å—å–±–∞ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏
	
	### –ù–∞–º–µ—Ä–µ–Ω–∏—è:
	- **technical_help** - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å
	- **process_question** - –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–∞–º
	- **general_info** - –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	- **product_info** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
	- **organization_info** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
	- **source_request** - –∑–∞–ø—Ä–æ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
	- **statistics** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
	- **coordination** - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è
	- **feedback** - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
	- **project_task** - –ø—Ä–æ–µ–∫—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏
	- **task_management** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏
	- **hr_request** - HR –∑–∞–ø—Ä–æ—Å—ã
	- **meeting_management** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∞–º–∏
	- **faq_usage** - FAQ –∏ –ø–æ–º–æ—â—å
	- **design_request** - –¥–∏–∑–∞–π–Ω –∑–∞–ø—Ä–æ—Å—ã
	""")
	
	# Notes section (hardcoded)
	st.subheader("üìù –ó–∞–º–µ—Ç–∫–∏")
	st.info("–ó–¥–µ—Å—å —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∞–Ω–∞–ª–∏–∑—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π.")
	
	categories, intents = get_category_stats(conversations)
	
	col1, col2 = st.columns(2)
	
	with col1:
		st.subheader("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")
		if categories:
			fig = px.pie(
				values=list(categories.values()),
				names=list(categories.keys()),
				title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–ø—Ä–æ—Å–æ–≤"
			)
			st.plotly_chart(fig, use_container_width=True)
		else:
			st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
	
	with col2:
		st.subheader("–ù–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
		if intents:
			fig = px.bar(
				x=list(intents.keys()),
				y=list(intents.values()),
				title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
			)
			st.plotly_chart(fig, use_container_width=True)
		else:
			st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–º–µ—Ä–µ–Ω–∏—è—Ö")
	
	# Detailed breakdown
	st.subheader("üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞")
	
	if categories:
		category_df = pd.DataFrame(list(categories.items()), columns=['–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'])
		category_df['–ü—Ä–æ—Ü–µ–Ω—Ç'] = (category_df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] / category_df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum() * 100).round(2)
		st.dataframe(category_df, use_container_width=True)