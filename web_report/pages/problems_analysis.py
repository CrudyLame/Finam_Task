"""
Problems analysis page for the Finam analytics dashboard
"""

import streamlit as st
import pandas as pd
import plotly.express as px

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))
from utils import get_problems_stats


def show_problems_analysis(conversations):
	"""Display problems analysis page with issue detection and severity"""
	st.header("‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º")
	
	# Create tabs
	tab1, tab2 = st.tabs(["üìä –ê–Ω–∞–ª–∏–∑", "üí° –ì–∏–ø–æ—Ç–µ–∑—ã"])
	
	with tab1:
		# Description section (empty for user to fill)
		st.subheader("üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞")
		st.markdown("""
		–ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫.
		
		### –ü–æ–¥—Ö–æ–¥ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é —Ç–∏–ø–æ–≤ –ø—Ä–æ–±–ª–µ–º:
		
		**ProblemDetector** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–±–ª–µ–º:
		
		**–¢–∏–ø—ã –ø—Ä–æ–±–ª–µ–º:**
		- **technical_issues** - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–±–æ–∏ (–æ—à–∏–±–∫–∞, —Å–±–æ–π, —É–ø–∞–ª, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –±–∞–≥, traceback, server error)
		- **user_confusion** - –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ—è—Å–Ω–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ, please clarify, confused)
		- **system_limitations** - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã (–Ω–µ –º–æ–≥—É, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, not supported, feature disabled)
		- **missing_information** - –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö (–Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, not found, no data)
		- **routing_error** - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è (–Ω–µ –ø–æ –∞–¥—Ä–µ—Å—É, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, wrong department)
		- **performance_latency** - –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é >10 —Å–µ–∫)
		
		**–ê–ª–≥–æ—Ä–∏—Ç–º –¥–µ—Ç–µ–∫—Ü–∏–∏:**
		1. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –¥–∏–∞–ª–æ–≥–∞
		2. –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–±–ª–µ–º (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ)
		3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–æ–≤
		4. –í–æ–∑–≤—Ä–∞—Ç —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–±–ª–µ–º
		""")
		
		# Notes section (hardcoded)
		st.subheader("üìù –ó–∞–º–µ—Ç–∫–∏")
		st.info("–ó–¥–µ—Å—å —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∞–Ω–∞–ª–∏–∑—É –ø—Ä–æ–±–ª–µ–º.")
		
		problems = get_problems_stats(conversations)
		
		if problems:
			col1, col2 = st.columns([2, 1])
			
			with col1:
				# Problem frequency chart
				fig = px.bar(
					x=list(problems.values()),
					y=list(problems.keys()),
					orientation='h',
					title="–ß–∞—Å—Ç–æ—Ç–∞ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"
				)
				fig.update_layout(yaxis={'categoryorder':'total ascending'})
				st.plotly_chart(fig, use_container_width=True)
			
			with col2:
				st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º")
				total_problems = sum(problems.values())
				st.metric("–í—Å–µ–≥–æ —Å–ª—É—á–∞–µ–≤ –ø—Ä–æ–±–ª–µ–º", total_problems)
				st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–±–ª–µ–º", len(problems))
				
				# Problem severity (mock classification for demo)
				st.subheader("–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º")
				high_severity = ["system_error", "data_loss", "security_breach"]
				medium_severity = ["performance_issue", "user_confusion", "timeout"]
				
				high_count = sum(problems.get(p, 0) for p in high_severity)
				medium_count = sum(problems.get(p, 0) for p in medium_severity)
				low_count = total_problems - high_count - medium_count
				
				severity_data = pd.DataFrame({
					'–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å': ['–í—ã—Å–æ–∫–∞—è', '–°—Ä–µ–¥–Ω—è—è', '–ù–∏–∑–∫–∞—è'],
					'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ': [high_count, medium_count, low_count]
				})
				
				fig = px.pie(severity_data, values='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', names='–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å', 
							title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏")
				st.plotly_chart(fig, use_container_width=True)
			
			# Detailed problems table
			st.subheader("üìã –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö")
			problems_df = pd.DataFrame(list(problems.items()), columns=['–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã', '–ß–∞—Å—Ç–æ—Ç–∞'])
			problems_df['–ü—Ä–æ—Ü–µ–Ω—Ç'] = (problems_df['–ß–∞—Å—Ç–æ—Ç–∞'] / problems_df['–ß–∞—Å—Ç–æ—Ç–∞'].sum() * 100).round(2)
			problems_df = problems_df.sort_values('–ß–∞—Å—Ç–æ—Ç–∞', ascending=False)
			st.dataframe(problems_df, use_container_width=True)
			
		else:
			st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –≤ –¥–∏–∞–ª–æ–≥–∞—Ö")
	
	with tab2:
		st.subheader("üí° –ì–∏–ø–æ—Ç–µ–∑—ã –æ –ø—Ä–∏—á–∏–Ω–∞—Ö –ø—Ä–æ–±–ª–µ–º")
		
		st.markdown("""
		### –ß—Ç–æ —ç—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
		
		–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è –∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–∞—è ‚Äì –∑–∞–ø—Ä–æ—Å—ã —É—Ö–æ–¥—è—Ç –≤–≥–ª—É–±—å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å—ë —Ä–∞–≤–Ω–æ ¬´–¥—ã—Ä—è–≤—ã–π¬ª.
		
		–ú–µ–¥–ª–µ–Ω–Ω—ã–π –ø–∞–π–ø-–ª–∞–π–Ω –ø–æ–∏—Å–∫–∞/–∞–≥—Ä–µ–≥–∞—Ü–∏–∏ ‚Äì –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Ñ–∞–∫—Ç –Ω–∞–π–¥—ë–Ω, –Ω–∞ –µ–≥–æ –¥–æ—Å—Ç–∞–≤–∫—É —Ç—Ä–∞—Ç–∏—Ç—Å—è –ª–∏—à–Ω–µ–µ –≤—Ä–µ–º—è, —á—Ç–æ —É—Å–∏–ª–∏–≤–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ ¬´–±–æ—Ç –∑–Ω–∞–µ—Ç –º–∞–ª–æ –∏ –º–µ–¥–ª–∏—Ç¬ª.
		
		### –ì–∏–ø–æ—Ç–µ–∑–∞ –ø—Ä–∏—á–∏–Ω—ã
		
		–ö–æ—Ä–Ω–µ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –ª–æ–≥–∏–∫–µ –∞–≥–µ–Ω—Ç–æ–≤, –∞ –≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã, –ø–ª–æ—Ö–æ –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –∏ —Ä–µ–¥–∫–æ –æ—Å–≤–µ–∂–∞—é—Ç—Å—è. –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ:
		
		- –∞–≥–µ–Ω—Ç—ã —á–∞—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç ¬´–Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ¬ª (missing_information);
		- Supervisor –≤—ã–Ω—É–∂–¥–µ–Ω –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ (performance_latency).
		""")