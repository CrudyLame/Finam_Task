import streamlit as st
from utils import load_conversation_data
from pages.overview import show_overview
from pages.category_analysis import show_category_analysis
from pages.problems_analysis import show_problems_analysis
from pages.functional_analysis import show_functional_analysis
from pages.ux_analysis import show_ux_analysis
from pages.agent_performance import show_agent_performance

# Page config
st.set_page_config(
	page_title="–ü–∞–Ω–µ–ª—å –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ Finam",
	page_icon="üìä",
	layout="wide",
	initial_sidebar_state="expanded"
)


def main():
	st.title("üìä –ü–∞–Ω–µ–ª—å –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–π –°–∏—Å—Ç–µ–º—ã Finam")
	
	# Load data
	try:
		data = load_conversation_data()
		conversations = data['conversations']
		metadata = data['metadata']
	except Exception as e:
		st.error(f"Failed to load data: {str(e)}")
		return
	
	# Initialize session state for page navigation
	if 'current_page' not in st.session_state:
		st.session_state.current_page = "–û–±–∑–æ—Ä"
	
	# Sidebar navigation
	st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
	
	# Navigation buttons
	pages = {
		"üìà –û–±–∑–æ—Ä": "–û–±–∑–æ—Ä",
		"üìä –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π": "–ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", 
		"üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º": "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º",
		"üîß –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞": "–ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞",
		"üé® UX –∞–Ω–∞–ª–∏–∑": "UX –∞–Ω–∞–ª–∏–∑",
		"‚ö° –ê–≥–µ–Ω—Ç—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã": "–ê–≥–µ–Ω—Ç—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã"
	}
	
	for display_name, page_key in pages.items():
		if st.sidebar.button(display_name, key=f"nav_{page_key}", use_container_width=True):
			st.session_state.current_page = page_key
	
	# Also keep selectbox for compatibility 
	selected_page = st.sidebar.selectbox(
		"–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:",
		list(pages.values()),
		index=list(pages.values()).index(st.session_state.current_page)
	)
	
	# Update current page if selectbox changed
	if selected_page != st.session_state.current_page:
		st.session_state.current_page = selected_page
	
	page = st.session_state.current_page
	
	# Overview metrics
	st.sidebar.markdown("---")
	st.sidebar.metric("–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤", metadata['total_conversations'])
	st.sidebar.metric("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", metadata['last_updated'][:10])
	
	if page == "–û–±–∑–æ—Ä":
		show_overview(conversations, metadata)
	elif page == "–ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π":
		show_category_analysis(conversations)
	elif page == "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º":
		show_problems_analysis(conversations)
	elif page == "–ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞":
		show_functional_analysis(conversations)
	elif page == "UX –∞–Ω–∞–ª–∏–∑":
		show_ux_analysis(conversations)
	elif page == "–ê–≥–µ–Ω—Ç—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã":
		show_agent_performance(conversations)

if __name__ == "__main__":
	main()